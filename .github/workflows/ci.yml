name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: devopscuteguy/example-app

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8

  build-and-push:
    needs: setup
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    outputs:
      image-tag: ${{ steps.version.outputs.version }}
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Generate version
      id: version
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        BUILD_NUMBER=${{ github.run_number }}
        BASE_VERSION="0.0.1"  # You can change this base version
        
        VERSION="${BRANCH}_${BASE_VERSION}_${BUILD_NUMBER}"
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
        echo "Branch: $BRANCH"
        echo "Build number: $BUILD_NUMBER"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.version.outputs.version }}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-helm-values:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.CI_GITHUB_TOKEN }}
    
    - name: Update Helm values
      run: |
        NEW_TAG="${{ needs.build-and-push.outputs.version }}"
        
        echo "Updating Helm values with tag: $NEW_TAG"
        
        # Update values.yaml
        sed -i "s/tag: .*/tag: \"$NEW_TAG\"/" helm/latency-app/values.yaml
        
        # Commit changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add helm/latency-app/values.yaml
        git commit -m "ðŸš€ Deploy $NEW_TAG" || exit 0
        git push